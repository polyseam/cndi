{
  "prompts": [
    {
      "name": "argocdDomainName",
      "default": "argocd.example.com",
      "message": "Please enter the domain name you want argocd to be accessible on:",
      "type": "Input"
    },
    {
      "name": "mongodbDomainName",
      "default": "mongodb.example.com",
      "message": "Please enter the domain name you want mongodb to be accessible on:",
      "type": "Input"
    },
    {
      "message": "Please enter the number of ReplicaSet you want to deploy",
      "default": 3,
      "name": "mongodbReplicaSets",
      "type": "Number"
    },
    {
      "message": "Please enter the username for your mongodb admin",
      "default": "admin",
      "name": "mongodbUser",
      "type": "Input"
    },
    {
      "message": "Please enter the mongodb password you want to use for your mongodb database:",
      "default": "password",
      "name": "mongodbPassword",
      "type": "Secret"
    },
    {
      "message": "Please enter the name for the mongodb database you want to use:",
      "default": "my-mongodb-database",
      "name": "mongodbName",
      "type": "Input"
    },
    {
      "message": "Please enter your destination namespace for your mongoDb database:",
      "default": "mongodb",
      "name": "mongodbNamespace",
      "type": "Input"
    },
    {
      "message": "Please enter the email address you want to use for lets encrypt:",
      "default": "admin@example.com",
      "name": "letsEncryptClusterIssuerEmailAddress",
      "type": "Input"
    }
  ],
  "outputs": {
    "cndi-config": {
      "cndi_version": "v1",
      "infrastructure": {
        "cndi": {
          "cert_manager": {
            "email": "{{ $.cndi.prompts.responses.letsEncryptClusterIssuerEmailAddress }}"
          },
          "open_ports": [
            {
              "number": 27017,
              "name": "mongodb",
              "namespace": "{{ $.cndi.prompts.responses.mongodbNamespace }}",
              "service": "mongodb-replica-set-svc"
            }
          ],
          "nodes": [
            {
              "name": "x-mongodb-node",
              "kind": "gcp",
              "role": "leader",
              "instance_type": "n2-standard-2",
              "volume_size": 128
            },
            {
              "name": "y-mongodb-node",
              "kind": "gcp",
              "volume_size": 128
            },
            {
              "name": "z-mongodb-node",
              "kind": "gcp",
              "volume_size": 128
            }
          ]
        }
      },
      "cluster_manifests": {
        "argo-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "argocd-server-ingress",
            "namespace": "argocd",
            "annotations": {
              "cert-manager.io/cluster-issuer": "cluster-issuer",
              "kubernetes.io/tls-acme": "true",
              "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
              "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.argocdDomainName }}"
                ],
                "secretName": "cluster-issuer-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.argocdDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "argocd-server",
                          "port": {
                            "name": "https"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "mongodb-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "mongodb-server-ingress",
            "namespace": "{{ $.cndi.prompts.responses.mongodbNamespace }}",
            "annotations": {
              "cert-manager.io/cluster-issuer": "cluster-issuer",
              "kubernetes.io/tls-acme": "true",
              "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
              "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.mongodbDomainName }}"
                ],
                "secretName": "cluster-issuer-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.mongodbDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "mongodb-replica-set-svc",
                          "port": {
                            "name": "mongodb"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "my-user-password": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "my-user-password",
            "namespace": "{{ $.cndi.prompts.responses.mongodbNamespace }}"
          },
          "type": "Opaque",
          "stringData": {
            "password": "$.cndi.secrets.seal(MONGODB_PASSWORD)"
          }
        },
        "mongodb-community-crd": {
          "apiVersion": "mongodbcommunity.mongodb.com/v1",
          "kind": "MongoDBCommunity",
          "metadata": {
            "name": "mongodb-replica-set",
            "namespace": "{{ $.cndi.prompts.responses.mongodbNamespace }}",
            "annotations": {
              "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
            }
          },
          "spec": {
            "members": "{{ $.cndi.prompts.responses.mongodbReplicaSets }}",
            "type": "ReplicaSet",
            "version": "4.4.0",
            "security": {
              "authentication": {
                "modes": [
                  "SCRAM"
                ]
              }
            },
            "users": [
              {
                "name": "{{ $.cndi.prompts.responses.mongodbUser }}",
                "db": "{{ $.cndi.prompts.responses.mongodbName }}",
                "passwordSecretRef": {
                  "name": "my-user-password"
                },
                "roles": [
                  {
                    "name": "clusterAdmin",
                    "db": "{{ $.cndi.prompts.responses.mongodbName }}"
                  },
                  {
                    "name": "userAdminAnyDatabase",
                    "db": "{{ $.cndi.prompts.responses.mongodbName }}"
                  }
                ],
                "scramCredentialsSecretName": "my-scram"
              }
            ]
          }
        }
      },
      "applications": {
        "mongodb": {
          "targetRevision": "0.8.0",
          "destinationNamespace": "{{ $.cndi.prompts.responses.mongodbNamespace }}",
          "repoURL": "https://mongodb.github.io/helm-charts",
          "chart": "community-operator"
        }
      }
    },
    "env": {
      "extend_basic_env": "gcp",
      "entries": [
        {
          "name": "MONGODB_DATABASE",
          "value": "{{ $.cndi.prompts.responses.mongodbName }}"
        },
        {
          "name": "MONGODB_USER",
          "value": "{{ $.cndi.prompts.responses.mongodbUser }}"
        },
        {
          "name": "MONGODB_PASSWORD",
          "value": "{{ $.cndi.prompts.responses.mongodbPassword }}"
        },
        {
          "name": "MONGODB_CONNECTION_STRING",
          "value": "mongodb://{{ $.cndi.prompts.responses.mongodbUser }}:{{ $.cndi.prompts.responses.mongodbPassword }}@{{ $.cndi.prompts.responses.mongodbDomainName }}/{{ $.cndi.prompts.responses.mongodbName }}"
        },
        {
          "name": "MONGODB_REPLICA_SETS",
          "value": "{{ $.cndi.prompts.responses.mongodbReplicaSets }}"
        },
        {
          "name": "MONGODB_NAMESPACE",
          "value": "{{ $.cndi.prompts.responses.mongodbNamespace }}"
        }
      ]
    },
    "readme": {
      "extend_basic_readme": "gcp",
      "template_section": "## mongodb\n\nThis template deploys a Standalone production ready [mongodb-community-operator](https://github.com/mongodb/mongodb-kubernetes-operator) \n\nTo test the connection you will need to [Install Mongo shell](https://www.mongodb.com/docs/mongodb-shell/install/).\n\nOnce the `mongosh` is installed, test the connection from terminal `mongosh mongodb://admin:password@mongodb.example.com`\nYou can find the MONGODB_CONNECTION_STRING in the .env file."
    }
  }
}
