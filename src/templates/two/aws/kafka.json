{
  "prompts": [
    {
      "name": "argocdDomainName",
      "default": "argocd.example.com",
      "message": "Please enter the domain name you want argocd to be accessible on:",
      "type": "Input"
    },
    {
      "message": "Please enter the email address you want to use for lets encrypt:",
      "default": "admin@example.com",
      "name": "letsEncryptClusterIssuerEmailAddress",
      "type": "Input"
    }
  ],
  "outputs": {
    "cndi-config": {
      "cndi_version": "v1",
      "infrastructure": {
        "cndi": {
          "nodes": [
            {
              "name": "x-cnpg-node",
              "kind": "ec2",
              "role": "leader",
              "instance_type": "m5a.large",
              "volume_size": 128
            },
            {
              "name": "y-cnpg-node",
              "kind": "ec2",
              "volume_size": 128
            },
            {
              "name": "z-cnpg-node",
              "kind": "ec2",
              "volume_size": 128
            }
          ]
        },
        "terraform": {
          "resource": {
            "aws_security_group": {
              "cndi_aws_security_group": {
                "ingress": [
                  {
                    "description": "Port for postgres traffic",
                    "from_port": "5432",
                    "to_port": "5432",
                    "protocol": "tcp",
                    "cidr_blocks": [
                      "0.0.0.0/0"
                    ],
                    "ipv6_cidr_blocks": [],
                    "prefix_list_ids": [],
                    "security_groups": [],
                    "self": false
                  }
                ]
              }
            },
            "aws_lb_listener": {
              "cndi_aws_lb_listener_postgres": {
                "load_balancer_arn": "${aws_lb.cndi_aws_lb.arn}",
                "port": 5432,
                "protocol": "TCP",
                "default_action": [
                  {
                    "type": "forward",
                    "target_group_arn": "${aws_lb_target_group.cndi_aws_lb_target_group_postgres.arn}"
                  }
                ]
              }
            },
            "aws_lb_target_group": {
              "cndi_aws_lb_target_group_postgres": {
                "port": 5432,
                "protocol": "TCP",
                "vpc_id": "${aws_vpc.cndi_aws_vpc.id}",
                "tags": {
                  "Name": "POSTGRESLBTargetGroup",
                  "CNDIProject": "${local.cndi_project_name}"
                }
              }
            },
            "aws_lb_target_group_attachment": {
              "cndi_aws_lb_target_group_attachment_postgres": {
                "count": "${length(local.node_id_list)}",
                "target_group_arn": "${aws_lb_target_group.cndi_aws_lb_target_group_postgres.arn}",
                "target_id": "${local.node_id_list[count.index]}"
              }
            }
          }
        }
      },
      "cluster_manifests": {
        "kafka-namespace": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "name": "kafka"
          }
        },
        "kafka-cluster": {
          "apiVersion": "kafka.strimzi.io/v1beta2",
          "kind": "Kafka",
          "metadata": {
            "name": "my-cluster",
            "namespace": "kafka"
          },
          "spec": {
            "kafka": {
              "replicas": 3,
              "version": "3.2.0",
              "logging": {
                "type": "inline",
                "loggers": {
                  "kafka.root.logger.level": "INFO"
                }
              },
              "config": {
                "auto.create.topics.enable": "false",
                "offsets.topic.replication.factor": 3,
                "transaction.state.log.replication.factor": 3,
                "transaction.state.log.min.isr": 2,
                "default.replication.factor": 3,
                "min.insync.replicas": 2,
                "inter.broker.protocol.version": "3.2"
              },
              "listeners": [
                {
                  "name": "plain",
                  "port": 9092,
                  "type": "internal",
                  "tls": false
                },
                {
                  "name": "tls",
                  "port": 9093,
                  "type": "internal",
                  "tls": true
                }
              ],
              "storage": {
                "type": "jbod",
                "volumes": [
                  {
                    "id": 0,
                    "type": "persistent-claim",
                    "size": "30Gi",
                    "deleteClaim": true
                  }
                ]
              }
            },
            "zookeeper": {
              "replicas": 3,
              "storage": {
                "type": "persistent-claim",
                "size": "10Gi",
                "deleteClaim": true
              }
            },
            "entityOperator": {
              "topicOperator": {},
              "userOperator": {}
            }
          }
        },
        "cert-manager-cluster-issuer": {
          "apiVersion": "cert-manager.io/v1",
          "kind": "ClusterIssuer",
          "metadata": {
            "name": "lets-encrypt"
          },
          "spec": {
            "acme": {
              "email": "{{ $.cndi.prompts.responses.letsEncryptClusterIssuerEmailAddress }}",
              "server": "https://acme-v02.api.letsencrypt.org/directory",
              "privateKeySecretRef": {
                "name": "lets-encrypt-private-key"
              },
              "solvers": [
                {
                  "http01": {
                    "ingress": {
                      "class": "public"
                    }
                  }
                }
              ]
            }
          }
        },
        "argo-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "argocd-server-ingress",
            "namespace": "argocd",
            "annotations": {
              "cert-manager.io/cluster-issuer": "lets-encrypt",
              "kubernetes.io/tls-acme": "true",
              "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
              "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.argocdDomainName }}"
                ],
                "secretName": "lets-encrypt-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.argocdDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "argocd-server",
                          "port": {
                            "name": "https"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "applications": {
        "strimzi-kafka-operator": {
          "targetRevision": "0.31.1",
          "destinationNamespace": "strimzi-kafka-operator",
          "repoURL": "https://strimzi.io/charts/",
          "chart": "strimzi-kafka-operator",
          "values": {}
        }
      }
    },
    "env": {
      "extend_basic_env": "aws",
      "entries": []
    },
    "readme": {
      "extend_basic_readme": "aws",
      "template_section": "## kafka\n\nThis template deploys a [Strimzi](https://https://strimzi.io/) production ready way to run an Apache Kafka cluster on Kubernetes in various deployment configurations"
    }
  }
}
