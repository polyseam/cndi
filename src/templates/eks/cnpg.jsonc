{
  "prompts": [
    {
      "name": "argocdDomainName",
      "default": "argocd.example.com",
      "message": "Please enter the domain name you want argocd to be accessible on:",
      "type": "Input"
    },
    {
      "name": "postgresqlDomainName",
      "default": "postgresql.example.com",
      "message": "Please enter the domain name you want postgresql to be accessible on:",
      "type": "Input"
    },
    {
      "message": "Please enter the username for your postgresql admin:",
      "default": "admin",
      "name": "postgresqlUser",
      "type": "Input"
    },
    {
      "message": "Please enter the postgresql password you want to use for your postgresql database:",
      "default": "password",
      "name": "postgresqlPassword",
      "type": "Secret"
    },
    {
      "message": "Please enter the name for the postgresql database you want to use:",
      "default": "my-pgdatabase",
      "name": "postgresqlDb",
      "type": "Input"
    },
    {
      "message": "Please enter your destination namespace for your postgresql database:",
      "default": "postgresql",
      "name": "pgNamespace",
      "type": "Input"
    },
    {
      "message": "Please enter the name for your postgresql cluster:",
      "default": "my-pgcluster",
      "name": "postgresqlClusterName",
      "type": "Input"
    },
    {
      "message": "Please enter the email address you want to use for lets encrypt:",
      "default": "admin@example.com",
      "name": "letsEncryptClusterIssuerEmailAddress",
      "type": "Input"
    }
  ],
  "outputs": {
    "cndi-config": {
      "cndi_version": "v1",
      "infrastructure": {
        "cndi": {
          "cert_manager": {
            "email": "{{ $.cndi.prompts.responses.letsEncryptClusterIssuerEmailAddress }}"
          },
          "open_ports": [
            {
              "number": 5432,
              "name": "postgres",
              "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}",
              "service": "{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw"
            }
          ],
          "nodes": [
            {
              "name": "pg-nodes",
              "kind": "eks",
              "instance_type": "t3.large",
              "volume_size": 128,
              "min_count": 1,
              "max_count": 3
            }
          ]
        }
      },
      "cluster_manifests": {
        "cnpg-namespace": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "name": "{{ $.cndi.prompts.responses.pgNamespace }}"
          }
        },
        "cnpg-cluster": {
          "apiVersion": "postgresql.cnpg.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "{{ $.cndi.prompts.responses.postgresqlClusterName }}",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}",
            "annotations": {
              "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
            }
          },
          "spec": {
            "imageName": "ghcr.io/cloudnative-pg/postgresql:15.2",
            "instances": 3,
            "storage": {
              "size": "1Gi"
            },
            "replicationSlots": {
              "highAvailability": {
                "enabled": true
              }
            },
            "postgresql": {
              "pg_hba": [
                "host {{ $.cndi.prompts.responses.postgresqlDb }} {{ $.cndi.prompts.responses.postgresqlUser }} all password"
              ]
            },
            "bootstrap": {
              "initdb": {
                "database": "{{ $.cndi.prompts.responses.postgresqlDb }}",
                "owner": "{{ $.cndi.prompts.responses.postgresqlUser }}",
                "secret": {
                  "name": "cnpg-database-user-auth-secret"
                }
              }
            },
            "superuserSecret": {
              "name": "cnpg-cluster-superuser-auth-secret"
            }
          }
        },
        "cnpg-cluster-superuser-auth-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-cluster-superuser-auth-secret",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}"
          },
          "type": "kubernetes.io/basic-auth",
          "stringData": {
            "username": "$.cndi.secrets.seal(POSTGRESQL_CLUSTER_SUPERUSER)",
            "password": "$.cndi.secrets.seal(POSTGRESQL_PASSWORD)"
          }
        },
        "cnpg-database-user-auth-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-database-user-auth-secret",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}"
          },
          "type": "kubernetes.io/basic-auth",
          "stringData": {
            "username": "$.cndi.secrets.seal(POSTGRESQL_USER)",
            "password": "$.cndi.secrets.seal(POSTGRESQL_PASSWORD)"
          }
        },
        "cnpg-connection-string-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-connection-string-secret",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}"
          },
          "type": "Opaque",
          "stringData": {
            "connection": "$.cndi.secrets.seal(POSTGRESQL_CONNECTION_STRING)"
          }
        },
        "cnpg-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "cnpg-ingress",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}",
            "annotations": {
              "cert-manager.io/cluster-issuer": "cluster-issuer"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.postgresqlDomainName }}"
                ],
                "secretName": "cluster-issuer-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.postgresqlDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw",
                          "port": {
                            "number": 5432
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "argo-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "argocd-server-ingress",
            "namespace": "argocd",
            "annotations": {
              "cert-manager.io/cluster-issuer": "cluster-issuer",
              "kubernetes.io/tls-acme": "true",
              "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
              "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.argocdDomainName }}"
                ],
                "secretName": "cluster-issuer-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.argocdDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "argocd-server",
                          "port": {
                            "name": "https"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "applications": {
        "cnpg": {
          "targetRevision": "0.18.0",
          "destinationNamespace": "cnpg-system",
          "repoURL": "https://cloudnative-pg.github.io/charts",
          "chart": "cloudnative-pg"
        }
      }
    },
    "env": {
      "extend_basic_env": "aws",
      "entries": [
        {
          "type": "Comment",
          "comment": "PostgreSQL connection parameters"
        },
        {
          "name": "POSTGRESQL_DB",
          "value": "{{ $.cndi.prompts.responses.postgresqlDb }}"
        },
        {
          "name": "POSTGRESQL_USER",
          "value": "{{ $.cndi.prompts.responses.postgresqlUser }}"
        },
        {
          "name": "POSTGRESQL_PASSWORD",
          "value": "{{ $.cndi.prompts.responses.postgresqlPassword }}"
        },
        {
          "name": "POSTGRESQL_PROTOCOL",
          "value": "postgresql"
        },
        {
          "name": "POSTGRESQL_HOST",
          "value": "{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw"
        },
        {
          "name": "POSTGRESQL_PORT",
          "value": "5432"
        },
        {
          "name": "POSTGRESQL_CONNECTION_STRING",
          "value": "postgresql://{{ $.cndi.prompts.responses.postgresqlUser }}:{{ $.cndi.prompts.responses.postgresqlPassword }}@{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw:5432/{{ $.cndi.prompts.responses.postgresqlDb }}"
        },
        {
          "name": "POSTGRESQL_CLUSTER_SUPERUSER",
          "value": "postgres"
        }
      ]
    },
    "readme": {
      "extend_basic_readme": "aws",
      "template_section": "## cloudnative-pg\n\nThis template deploys a Standalone production ready [cloudnative-posgresql-database](https://github.com/cloudnative-pg/charts)"
    }
  }
}
