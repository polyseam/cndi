prompts:
  - name: neo4jUsername
    default: neo4j
    message: 'Please enter the username you will use to connect to Neo4j:'
    type: Input
  - name: neo4jPassword
    default: letmeinplease
    message: 'Please enter the password you will use to connect to Neo4j:'
    type: Secret
  - name: neo4jDomainName
    default: neo4j.example.com
    message: 'Please enter the domain name you want Neo4j to be accessible on:'
    type: Input
  - name: argocdDomainName
    default: argocd.example.com
    message: 'Please enter the domain name you want argocd to be accessible on:'
    type: Input
  - message: 'Please enter the email address you want to use for lets encrypt:'
    default: admin@example.com
    name: letsEncryptClusterIssuerEmailAddress
    type: Input
outputs:
  cndi-config:
    cndi_version: v1
    infrastructure:
      cndi:
        cert_manager:
          email: '{{ $.cndi.prompts.responses.letsEncryptClusterIssuerEmailAddress }}'
        open_ports:
          - name: tcp-bolt
            number: 7687
            service: neo4j
            namespace: neo4j
        nodes:
          - name: neo4j-main
            kind: gcp
            role: leader
            volume_size: 128
          - name: neo4j-a
            kind: gcp
            volume_size: 128
          - name: neo4j-b
            kind: gcp
            volume_size: 128
    cluster_manifests:
      neo4j-auth-secret:
        apiVersion: v1
        kind: Secret
        metadata:
          name: neo4j-auth-secret
          namespace: neo4j
        type: Opaque
        stringData:
          NEO4J_AUTH: $.cndi.secrets.seal(NEO4J_PASSWORD)
      neo4j-ingress:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: neo4j-ingress
          namespace: neo4j
          annotations:
            cert-manager.io/cluster-issuer: cluster-issuer
            kubernetes.io/tls-acme: 'true'
            nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        spec:
          tls:
            - hosts:
                - '{{ $.cndi.prompts.responses.neo4jDomainName }}'
              secretName: cluster-issuer-private-key
          rules:
            - host: '{{ $.cndi.prompts.responses.neo4jDomainName }}'
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: neo4j
                        port:
                          number: 7473
      argo-ingress:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: argocd-server-ingress
          namespace: argocd
          annotations:
            cert-manager.io/cluster-issuer: cluster-issuer
            kubernetes.io/tls-acme: 'true'
            nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        spec:
          tls:
            - hosts:
                - '{{ $.cndi.prompts.responses.argocdDomainName }}'
              secretName: cluster-issuer-private-key
          rules:
            - host: '{{ $.cndi.prompts.responses.argocdDomainName }}'
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: argocd-server
                        port:
                          name: https
    applications:
      neo4j:
        targetRevision: 5.9.0
        destinationNamespace: neo4j
        repoURL: 'https://helm.neo4j.com/neo4j'
        chart: neo4j
        values:
          disableLookups: true
          neo4j:
            name: neo4j
            passwordFromSecret: neo4j-auth-secret
            acceptLicenseAgreement: 'yes'
          volumes:
            data:
              mode: defaultStorageClass
          services:
            neo4j:
              enabled: false
          ssl:
            bolt:
              privateKey:
                secretName: cluster-issuer-private-key
                subPath: tls.key
              publicCertificate:
                secretName: cluster-issuer-private-key
                subPath: tls.crt
            https:
              privateKey:
                secretName: cluster-issuer-private-key
                subPath: tls.key
              publicCertificate:
                secretName: cluster-issuer-private-key
                subPath: tls.crt
            cluster:
              privateKey:
                secretName: cluster-issuer-private-key
                subPath: tls.key
              publicCertificate:
                secretName: cluster-issuer-private-key
                subPath: tls.crt
  env:
    extend_basic_env: gcp
    entries:
      - type: Comment
        comment: Neo4j Credentials
      - name: NEO4J_USERNAME
        value: '{{ $.cndi.prompts.responses.neo4jUsername }}'
      - type: Comment
        comment: '''neo4j/'' prefix is required for the password'
      - name: NEO4J_PASSWORD
        value: 'neo4j/{{ $.cndi.prompts.responses.neo4jPassword }}'
  readme:
    extend_basic_readme: gcp
    template_section: >-
      ## neo4j


      This template deploys a fully functional [Neo4j](https://neo4j.com)
      cluster using the [official Neo4j Helm
      chart](https://helm.neo4j.com/neo4j).
