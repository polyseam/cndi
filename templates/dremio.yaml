blocks:
  - name: deploy_dremio_ingress_blk
    content:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: dremio-ingress
        namespace: dremio
        annotations:
          cert-manager.io/cluster-issuer: cluster-issuer
          kubernetes.io/tls-acme: "true"
          external-dns.alpha.kubernetes.io/hostname: "{{ $cndi.get_prompt_response(dremio_hostname) }}"
      spec:
        ingressClassName: public
        tls:
          - hosts:
              - "{{ $cndi.get_prompt_response(dremio_hostname) }}"
            secretName: cluster-issuer-private-key-dremio
        rules:
          - host: "{{ $cndi.get_prompt_response(dremio_hostname) }}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: dremio
                      port:
                        number: 9047

prompts:
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/core-prompts.yaml):
      {}
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/core-prompts.yaml):
      {}

  - name: deploy_argocd_ingress
    default: true
    message: >-
      Do you want to expose ArgoCD with an Ingress?
    type: Confirm

  - name: argocd_hostname
    default: argocd.example.com
    message: >-
      What hostname should ArgoCD be accessible at?
    type: Input
    validators:
      - hostname
    condition:
      - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
      - ==
      - true
  - name: deploy_dremio_ingress
    default: true
    message: >-
      Do you want to expose the dremio UI to the web?
    type: Confirm

  - name: dremio_hostname
    default: dremio.example.com
    message: What hostname should dremio UI be accessible at?
    type: Input
    validators:
      - hostname # FQDN
      - min_length: 3
    condition:
      - "{{ $cndi.get_prompt_response(deploy_dremio_ingress) }}"
      - ==
      - true
  - name: dremio_username
    default: "admin"
    message: 'Enter the "Username" for the Dremio user:'
    type: Secret
    validators:
      - min_length: 3

  - name: dremio_password
    default: "{{ $cndi.get_random_string(18) }}"
    message: 'Enter the "Password" for your Dremio user:'
    type: Secret
    validators:
      - min_length: 8
outputs:
  cndi_config:
    cndi_version: v2
    project_name: "{{ $cndi.get_prompt_response(project_name) }}"
    provider: "{{ $cndi.get_prompt_response(deployment_target_provider) }}"
    distribution: "{{ $cndi.get_prompt_response(deployment_target_distribution) }}"
    infrastructure:
      cndi:
        cert_manager:
          email: "{{ $cndi.get_prompt_response(cert_manager_email) }}"

        external_dns:
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/external-dns/config/{{ $cndi.get_prompt_response(dns_provider) }}.yaml):
            condition:
              - "{{ $cndi.get_prompt_response(enable_external_dns) }}"
              - ==
              - true

        nodes:
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/basic-node-pool.yaml):
            {}

    cluster_manifests:
      argo-ingress:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/default-ingress.yaml):
          args:
            ingress_name: argocd-ingress
            ingress_class_name: public
            hostname: "{{ $cndi.get_prompt_response(argocd_hostname) }}"
            service_name: argocd-server
            service_port: 443
            namespace: argocd
          condition:
            - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
            - ==
            - true

      external-dns-secret:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/external-dns/secret/{{ $cndi.get_prompt_response(dns_provider) }}.yaml):
          condition:
            - "{{ $cndi.get_prompt_response(enable_external_dns) }}"
            - ==
            - true
      dremio-credentials-secret:
        apiVersion: v1
        kind: Secret
        metadata:
          name: dremio-credentials
          namespace: dremio
        type: Opaque
        stringData:
          DREMIO_AUTH_PASSWORD: $cndi_on_ow.seal_secret_from_env_var(DREMIO_AUTH_PASSWORD)
      dremio-ingress:
        $cndi.get_block(deploy_dremio_ingress_blk):
          condition:
            - "{{ $cndi.get_prompt_response(deploy_dremio_ingress) }}"
            - ==
            - true

    applications:
      dremio:
        targetRevision: 0.1.11
        destinationNamespace: dremio
        repoURL: "https://charts.bitnami.com/bitnami"
        chart: dremio
        values:
          dremio:
            service:
              type: ClusterIP
            auth:
              enabled: true
              username: "{{ $cndi.get_prompt_response(dremio_username) }}"
              existingSecretKey: DREMIO_AUTH_PASSWORD
              existingSecret: dremio-credentials
  env:
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/git-credentials-{{ $cndi.get_prompt_response(git_credentials_mode) }}-env.yaml):
      {}
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/env.yaml):
      {}
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/env.yaml):
      {}

    $cndi.comment(dremio-heading): Dremio credentials
    DREMIO_AUTH_PASSWORD: "{{ $cndi.get_prompt_response(dremio_password) }}"
    DREMIO_AUTH_USERNAME: "{{ $cndi.get_prompt_response(dremio_username) }}"
  readme:
    project_name: "# {{ $cndi.get_prompt_response(project_name) }}"
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/core-readme.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/core.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/{{ $cndi.get_prompt_response(deployment_target_distribution) }}.md):
      {}

    dremio: |
      # Dremio Deployment Guide

      This Template deploys a standalone production-ready [Dremio](https://www.dremio.com/) application using Helm on a Kubernetes cluster.
      Dremio is an open-source self-service data access tool that provides high-performance queries for interactive analytics on data lakes.
      The Dremio SQL Query Engine is designed for sub-second BI workloads directly on your data lake and across all your data sources with no data movement

      ## Configuration

            Customizing your Dremio deployment is straightforward with the Helm chart's extensive configuration options, adjustable in the `cndi_config.yaml` file under `applications.dremio.values`.

            For comprehensive details on all configurable values, please refer to the [chart's values.yaml file](https://github.com/bitnami/charts/blob/main/bitnami/dremio/values.yaml).

            ## Verifying Dremio Accessibility

            ### Steps for Verification

            **Access the Web Interface**:
              - Open a web browser and navigate to the domain you've configured for Dremio, e.g., `https://dremio.yourdomain.com`.
              - You should be greeted with Dremio's login screen.

            **Default Credentials**:
              - By default, the login credentials for a fresh Dremio installation are in your env file under the Dremio credentials heading with these keys:
                - DREMIO_AUTH_PASSWORD
                - DREMIO_AUTH_USERNAME
