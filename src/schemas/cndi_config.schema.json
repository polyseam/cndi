{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "title": "cndi_config",
  "$comment": "The root of the cndi config schema",
  "description": "A configuration file for CNDI that defines the hardware and software of your cluster",
  "required": ["infrastructure"],
  "additionalProperties": false,
  "allOf": [
    {
      "if": {
        "properties": {
          "provider": { "const": "aws" }
        },
        "required": ["provider"]
      },
      "then": {
        "properties": {
          "distribution": {
            "enum": ["microk8s", "eks", "clusterless"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "provider": { "const": "gcp" }
        },
        "required": ["provider"]
      },
      "then": {
        "properties": {
          "distribution": {
            "enum": ["microk8s", "gke", "clusterless"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "provider": { "const": "azure" }
        },
        "required": ["provider"]
      },
      "then": {
        "properties": {
          "distribution": {
            "enum": ["microk8s", "aks", "clusterless"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "provider": { "const": "dev" }
        },
        "required": ["provider"]
      },
      "then": {
        "properties": {
          "distribution": {
            "enum": ["microk8s"]
          }
        }
      }
    }
  ],
  "properties": {
    "project_name": {
      "type": "string",
      "description": "The name of the cndi project, should be unique in your personal ecosystem.",
      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
    },
    "cndi_version": {
      "type": "string",
      "description": "The version of cndi config api to use.",
      "pattern": "v2",
      "default": "v2"
    },
    "provider": {
      "type": "string",
      "description": "The cloud provider to use for the infrastructure.",
      "enum": ["aws", "gcp", "azure", "dev"]
    },
    "distribution": {
      "type": "string",
      "description": "The distribution of Kubernetes to use for the infrastructure.",
      "enum": ["microk8s", "eks", "gke", "aks", "clusterless"]
    },
    "infrastructure": {
      "type": "object",
      "description": "An object which defines the infrastructure resources CNDI should deploy.",
      "required": ["cndi"],
      "properties": {
        "terraform": {
          "properties": {
            "terraform": {},
            "provider": {},
            "variable": {},
            "locals": {},
            "data": {},
            "resource": {},
            "module": {},
            "output": {}
          },
          "additionalProperties": false
        },
        "cndi": {
          "type": "object",
          "description": "An object which contains the resources CNDI should deploy, which are defined by the CNDI project.",
          "required": ["nodes"],
          "additionalProperties": false,
          "properties": {
            "argocd": {
              "type": "object",
              "description": "An object which defines the ArgoCD resources CNDI should deploy.",
              "properties": {
                "hostname": {
                  "type": "string",
                  "description": "The hostname on which to make your CNDI ArgoCD available."
                }
              }
            },
            "observability": {
              "type": "object",
              "description": "An object which defines the observability resources CNDI should deploy.",
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether or not to deploy the observability resources."
                },
                "mode": {
                  "type": "string",
                  "enum": ["in_cluster"]
                },
                "grafana": {
                  "type": "object",
                  "description": "An object which defines the Grafana resources CNDI should deploy.",
                  "properties": {
                    "hostname": {
                      "type": "string",
                      "description": "The hostname on which to make your CNDI Observability Dashboards available."
                    }
                  },
                  "additionalProperties": false
                },
                "kube_prometheus_stack": {
                  "type": "object",
                  "description": "An object which defines the kube_prometheus_stack resources CNDI should deploy.",
                  "properties": {
                    "targetRevision": {
                      "type": "string",
                      "description": "The version or revision of the Loki Helm Chart to deploy."
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether or not to deploy the Loki resources."
                    },
                    "values": {
                      "type": "object",
                      "description": "An object which defines the values to be passed to the kube-prometheus-stack Helm Chart."
                    }
                  },
                  "additionalProperties": false
                },
                "loki": {
                  "type": "object",
                  "description": "An object which defines the Loki resources CNDI should deploy.",
                  "properties": {
                    "targetRevision": {
                      "type": "string",
                      "description": "The version or revision of the Loki Helm Chart to deploy."
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether or not to deploy the Loki resources."
                    },
                    "values": {
                      "type": "object",
                      "description": "An object which defines the values to be passed to the Loki Helm Chart."
                    }
                  },
                  "additionalProperties": false
                },
                "promtail": {
                  "type": "object",
                  "description": "An object which defines the Promtail resources CNDI should deploy.",
                  "properties": {
                    "targetRevision": {
                      "type": "string",
                      "description": "The version or revision of the Promtail Helm Chart to deploy."
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether or not to deploy the Loki resources."
                    },
                    "values": {
                      "type": "object",
                      "description": "An object which defines the values to be passed to the Loki Helm Chart."
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "network": {
              "type": "object",
              "description": "An object which defines the properties of the network in which your cluster will be deployed.",
              "properties": {
                "mode": {
                  "type": "string",
                  "enum": ["create", "insert"]
                }
              },
              "if": {
                "properties": {
                  "mode": { "const": "create" }
                }
              },
              "then": {
                "additionalProperties": false,
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": ["create"]
                  },
                  "vnet_address_space": {
                    "type": "string",
                    "description": "The address space used to create your CNDI cluster virtual network in 'create' mode.",
                    "default": "10.0.0.0/16"
                  }
                }
              },
              "else": {
                "additionalProperties": false,
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": ["insert"]
                  },
                  "vnet_identifier": {
                    "type": "string",
                    "description": "The identifier of the virtual network which to deploy your cluster."
                  },
                  "subnet_address_space": {
                    "type": "string",
                    "description": "The address space used to create your CNDI cluster subnet in 'insert' mode.",
                    "default": "10.0.0.0/20"
                  }
                }
              }
            },
            "functions": {
              "type": "object",
              "properties": {
                "hostname": {
                  "type": "string",
                  "description": "The hostname on which to make your CNDI Functions available."
                },
                "noModuleCache": {
                  "type": "boolean",
                  "description": "Disables module cache in functions runtime."
                },
                "maxMemoryLimitMb": {
                  "type": "number",
                  "description": "The maximum memory limit in MB for a function executed by the runtime."
                },
                "cpuTimeHardLimitMs": {
                  "type": "number",
                  "description": "The maximum CPU time hard limit in milliseconds for a function executed by the runtime."
                },
                "cpuTimeSoftLimitMs": {
                  "type": "number",
                  "description": "The maximum CPU time soft limit in milliseconds for a function executed by the runtime."
                },
                "workerTimeoutMs": {
                  "type": "number",
                  "description": "The maximum time in milliseconds a function can run before being terminated."
                },
                "edgeRuntimeImageTag": {
                  "type": "string",
                  "description": "The tag of the edge runtime image to use."
                }
              }
            },
            "external_dns": {
              "type": "object",
              "description": "An optional object to configure the Bitnami external-dns Kubernetes controller.",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether or not to deploy the external-dns controller."
                },
                "provider": {
                  "type": "string",
                  "description": "The DNS provider the external-dns controller should send updates to."
                },
                "domain_filters": {
                  "description": "An array of domain name filters which the external-dns controller should apply updates to.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "values": {
                  "type": "object"
                }
              },
              "additionalProperties": false
            },
            "reloader": {
              "type": "object",
              "description": "An optional object which permits disabling the reloader Kubernetes controller.",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                }
              },
              "additionalProperties": false
            },
            "cert_manager": {
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "default": true
                },
                "self_signed": {
                  "type": "boolean",
                  "description": "Whether or not the certificate should be self-signed (insecure).\n Can only be true if \"email\" is not defined.",
                  "default": false
                },
                "email": {
                  "type": "string",
                  "description": "The email address let's encrypt should attach to your certificates.\n Can only be used if \"self_signed\" is false or undefined."
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "self_signed": { "const": true },
                    "email": {
                      "not": {}
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "required": ["self_signed"],
                  "additionalProperties": false
                },
                {
                  "properties": {
                    "self_signed": { "enum": [false] },
                    "email": {},
                    "enabled": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "required": ["email"],
                  "additionalProperties": false
                }
              ],
              "additionalProperties": false
            },
            "open_ports": {
              "type": "array",
              "description": "An array of ports to open on the cluster.",
              "items": {
                "type": "object",
                "description": "A port to open or close for TCP traffic into the cluster.",
                "properties": {
                  "number": {
                    "type": "number",
                    "description": "The number of the port to open TCP traffic for.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "name": {
                    "type": "string"
                  },
                  "disable": {
                    "type": "boolean",
                    "default": false
                  },
                  "namespace": {
                    "type": "string",
                    "description": "The Kubernetes Namespace of the Service to open the port for."
                  },
                  "service": {
                    "type": "string",
                    "description": "The Kubernetes Service to open the port for."
                  }
                }
              }
            },
            "nodes": {
              "$comment": "An array of CNDI cluster nodes to deploy.",
              "minItems": 1,
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "object",
                "description": "An object which defines the properties of a new Kubernetes node for CNDI to deploy. At least one must be have the \"role\" property set to \"leader\".",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the node or node group to deploy."
                  },
                  "role": {
                    "type": "string",
                    "description": "Role of the node",
                    "enum": ["leader", "controller", "worker"]
                  },
                  "instance_type": {},
                  "volume_size": {
                    "type": "number",
                    "description": "The amount of disk to allocate to the node in G.",
                    "minimum": 1
                  },
                  "count": {
                    "type": "number",
                    "description": "The number of nodes to deploy.",
                    "minimum": 1,
                    "default": 1
                  },
                  "disk": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "The amount of disk to allocate to the node.",
                        "pattern": "^[0-9]+(?:G|M|K)$"
                      },
                      {
                        "type": "number",
                        "description": "The amount of disk to allocate to the node in G.",
                        "minimum": 1
                      }
                    ]
                  },
                  "memory": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "The amount of memory to allocate to the node.",
                        "pattern": "^[0-9]+(?:G|M|K)$"
                      },
                      {
                        "type": "number",
                        "description": "The amount of memory to allocate to the node in G.",
                        "minimum": 1
                      }
                    ]
                  }
                }
              }
            },
            "ingress": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "nginx": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "public": {
                      "description": "An object which defines the properties of the public nginx ingress controller.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "default": true,
                          "description": "Whether or not to deploy the public ingress-nginx controller."
                        },
                        "values": {
                          "type": "object",
                          "description": "An object which defines the values to be passed to the public ingress-nginx Helm Chart."
                        }
                      }
                    },
                    "private": {
                      "type": "object",
                      "description": "An object which defines the properties of the private nginx ingress controller.",
                      "properties": {
                        "additionalProperties": false,
                        "enabled": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether or not to deploy the private ingress-nginx controller."
                        },
                        "values": {
                          "type": "object",
                          "description": "An object which defines the values to be passed to the private ingress-nginx Helm Chart."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "cluster_manifests": {
      "type": "object",
      "description": "An object which contains all manifests that CNDI should apply to your cluster.",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9]+(?:-[a-z0-9]+)*$": {
          "type": "object",
          "description": "An object which represents a single manifest CNDI should apply to your cluster.",
          "required": ["kind", "apiVersion", "metadata"],
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of Kubernetes resource to deploy."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version of the Kubernetes resource to deploy."
            },
            "metadata": {
              "type": "object",
              "description": "The metadata of the Kubernetes resource to deploy.",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the Kubernetes resource to deploy."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace of the Kubernetes resource to deploy."
                },
                "labels": {
                  "type": "object",
                  "description": "The labels of the Kubernetes resource to deploy.",
                  "additionalProperties": true
                },
                "annotations": {
                  "type": "object",
                  "description": "The annotations of the Kubernetes resource to deploy.",
                  "additionalProperties": true
                }
              }
            },
            "spec": {
              "type": "object",
              "description": "The spec of the Kubernetes resource to deploy.",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "applications": {
      "type": "object",
      "description": "An object that defines how to generate an ArgoCD Application CRD.",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9]+(?:-[a-z0-9]+)*$": {
          "type": "object",
          "required": ["targetRevision", "destinationNamespace", "repoURL"],
          "oneOf": [
            {
              "required": ["chart"]
            },
            {
              "required": ["path"]
            }
          ],
          "properties": {
            "targetRevision": {
              "type": "string",
              "description": "The version or revision of the Helm Chart to deploy."
            },
            "repoURL": {
              "type": "string",
              "description": "The URL of the git-hosted Helm Chart or Helm repository to deploy."
            },
            "destinationNamespace": {
              "type": "string",
              "description": "The namespace in your CNDI Kubernetes cluster to deploy the Helm Chart to."
            },
            "chart": {
              "type": "string",
              "description": "The name of the Helm Chart to deploy."
            },
            "path": {
              "type": "string",
              "description": "The path to the Helm Chart from the root of the git-hosted repository."
            },
            "values": {
            },
            "syncPolicy": {
            }
          }
        }
      }
    }
  }
}
