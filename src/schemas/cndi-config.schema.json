{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "title": "cndi-config",
  "$comment": "The root of the cndi config schema",
  "description": "A configuration file for CNDI that defines the hardware and software of your cluster",
  "required": ["infrastructure"],
  "properties": {
    "project_name": {
      "type": "string",
      "description": "The name of the cndi project, should be unique in your personal ecosystem.",
      "pattern": "^[a-z0-9]+(?:-[a-z0-9]+)*$"
    },
    "cndi_version": {
      "type": "string",
      "description": "The version of cndi config api to use.",
      "pattern": "v1",
      "default": "v1"
    },
    "infrastructure": {
      "type": "object",
      "description": "An object which defines the infrastructure resources CNDI should deploy.",
      "required": ["cndi"],
      "properties": {
        "terraform": {
          "": {}
        },
        "cndi": {
          "type": "object",
          "description": "An object which contains the resources CNDI should deploy, which are defined by the CNDI project.",
          "required": ["nodes"],
          "properties": {
            "cert_manager": {
              "properties": {
                "self_signed": {
                  "type": "boolean",
                  "description": "Whether or not the certificate should be self-signed (insecure).\n Can only be true if \"email\" is not defined.",
                  "default": false
                },
                "email": {
                  "type": "string",
                  "description": "The email address let's encrypt should attach to your certificates.\n Can only be used if \"self_signed\" is false or undefined."
                }
              },
              "oneOf": [
                {
                  "properties": {
                    "self_signed": { "const": true },
                    "email": {
                      "not": {}
                    }
                  },
                  "required": ["self_signed"],
                  "additionalProperties": false
                },
                {
                  "properties": {
                    "self_signed": { "enum": [false] },
                    "email": {}
                  },
                  "required": ["email"],
                  "additionalProperties": false
                }
              ],
              "additionalProperties": false
            },
            "open_ports": {
              "type": "array",
              "description": "An array of ports to open on the cluster.",
              "items": {
                "type": "object",
                "description": "A port to open or close on the cluster.",
                "properties": {
                  "number": {
                    "type": "number",
                    "description": "The port number to open or close.",
                    "minimum": 1,
                    "maximum": 65535
                  },
                  "name": {
                    "type": "string"
                  },
                  "disable": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            },
            "nodes": {
              "$comment": "An array of CNDI cluster nodes to deploy.",
              "minItems": 1,
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "object",
                "description": "An object which defines the properties of a new Kubernetes node for CNDI to deploy. At least one must be have the \"role\" property set to \"leader\".",
                "required": ["name", "kind"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the node to deploy."
                  },
                  "kind": {
                    "type": "string",
                    "description": "The type of node to deploy.",
                    "enum": ["aws", "eks", "ec2", "gcp", "azure", "dev"]
                  },
                  "role": {
                    "type": "string",
                    "description": "Role of the node",
                    "enum": ["leader", "controller"]
                  },
                  "instance_type": {},
                  "volume_size": {
                    "type": "number",
                    "description": "The amount of disk to allocate to the node in G.",
                    "minimum": 1
                  },
                  "disk": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "The amount of disk to allocate to the node.",
                        "pattern": "^[0-9]+(?:G|M|K)$"
                      },
                      {
                        "type": "number",
                        "description": "The amount of disk to allocate to the node in G.",
                        "minimum": 1
                      }
                    ]
                  },
                  "memory": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "The amount of memory to allocate to the node.",
                        "pattern": "^[0-9]+(?:G|M|K)$"
                      },
                      {
                        "type": "number",
                        "description": "The amount of memory to allocate to the node in G.",
                        "minimum": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "cluster_manifests": {
      "type": "object",
      "description": "An object which contains all manifests that CNDI should apply to your cluster.",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9]+(?:-[a-z0-9]+)*$": {
          "type": "object",
          "description": "An object which represents a single manifest CNDI should apply to your cluster.",
          "required": ["kind", "apiVersion", "metadata"],
          "properties": {
            "kind": {
              "type": "string",
              "description": "The kind of Kubernetes resource to deploy."
            },
            "apiVersion": {
              "type": "string",
              "description": "The API version of the Kubernetes resource to deploy."
            },
            "metadata": {
              "type": "object",
              "description": "The metadata of the Kubernetes resource to deploy.",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the Kubernetes resource to deploy."
                }
              }
            },
            "spec": {
              "type": "object",
              "description": "The spec of the Kubernetes resource to deploy.",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "applications": {
      "type": "object",
      "description": "An object that defines how to generate an ArgoCD Application CRD.",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z0-9]+(?:-[a-z0-9]+)*$": {
          "type": "object",
          "required": ["targetRevision", "destinationNamespace", "repoURL"],
          "properties": {
            "targetRevision": {
              "type": "string",
              "description": "The version or revision of the Helm Chart to deploy."
            },
            "repoURL": {
              "type": "string",
              "description": "The URL of the git-hosted Helm Chart or Helm repository to deploy."
            },
            "destinationNamespace": {
              "type": "string",
              "description": "The namespace in your CNDI Kubernetes cluster to deploy the Helm Chart to."
            },
            "chart": {
              "type": "string",
              "description": "The name of the Helm Chart to deploy."
            },
            "path": {
              "type": "string",
              "description": "The path to the Helm Chart from the root of the git-hosted repository."
            },
            "values": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    }
  }
}
