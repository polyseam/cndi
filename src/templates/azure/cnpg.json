{
  "prompts": [
    {
      "name": "argocdDomainName",
      "default": "argocd.example.com",
      "message": "Please enter the domain name you want argocd to be accessible on:",
      "type": "Input"
    },
    {
      "name": "postgresqlDomainName",
      "default": "postgresql.example.com",
      "message": "Please enter the domain name you want postgresql to be accessible on:",
      "type": "Input"
    },
    {
      "message": "Please enter the username for your postgresql admin:",
      "default": "admin",
      "name": "postgresqlUser",
      "type": "Input"
    },
    {
      "message": "Please enter the postgresql password you want to use for your postgresql database:",
      "default": "password",
      "name": "postgresqlPassword",
      "type": "Secret"
    },
    {
      "message": "Please enter the name for the postgresql database you want to use:",
      "default": "my-pgdatabase",
      "name": "postgresqlDb",
      "type": "Input"
    },
    {
      "message": "Please enter your destination namespace for your postgresql database:",
      "default": "postgresql",
      "name": "pgNamespace",
      "type": "Input"
    },
    {
      "message": "Please enter the name for your postgresql cluster:",
      "default": "my-pgcluster",
      "name": "postgresqlClusterName",
      "type": "Input"
    },
    {
      "message": "Please enter the email address you want to use for lets encrypt:",
      "default": "admin@example.com",
      "name": "letsEncryptClusterIssuerEmailAddress",
      "type": "Input"
    }
  ],
  "outputs": {
    "cndi-config": {
      "cndi_version": "v1",
      "infrastructure": {
        "cndi": {
          "nodes": [
            {
              "name": "x-airflow-node",
              "kind": "azure",
              "role": "leader",
              "instance_type": "Standard_D4s_v3",
              "volume_size": 128
            },
            {
              "name": "y-airflow-node",
              "kind": "azure",
              "volume_size": 128
            },
            {
              "name": "z-airflow-node",
              "kind": "azure",
              "volume_size": 128
            }
          ]
        },
        "terraform": {
          "resource": {
            "azurerm_lb_probe": {
              "cndi_azurerm_lb_probe_postgres": {
                "loadbalancer_id": "${azurerm_lb.cndi_azurerm_lb.id}",
                "name": "cndi_load_balancer_postgres_health_probe",
                "port": 5432
              }
            },
            "azurerm_lb_rule": {
              "cndi_azurerm_lb_rule_postgres": {
                "backend_address_pool_ids": [
                  "${azurerm_lb_backend_address_pool.cndi_azurerm_lb_backend_address_pool.id}"
                ],
                "backend_port": 5432,
                "frontend_ip_configuration_name": "cndi_azurerm_lb_frontend_ip_configuration",
                "frontend_port": 5432,
                "loadbalancer_id": "${azurerm_lb.cndi_azurerm_lb.id}",
                "name": "postgres",
                "probe_id": "${azurerm_lb_probe.cndi_azurerm_lb_probe_postgres.id}",
                "protocol": "Tcp"
              }
            },
            "azurerm_network_security_group": {
              "cndi_azurerm_network_security_group": {
                "location": "${azurerm_resource_group.cndi_azurerm_resource_group.location}",
                "name": "cndi_azurerm_network_security_group",
                "resource_group_name": "${azurerm_resource_group.cndi_azurerm_resource_group.name}",
                "security_rule": [
                  {
                    "access": "Allow",
                    "description": "Allow inbound for postgres traffic",
                    "destination_address_prefix": "*",
                    "destination_address_prefixes": [],
                    "destination_application_security_group_ids": [],
                    "destination_port_range": "5432",
                    "destination_port_ranges": [],
                    "direction": "Inbound",
                    "name": "Allowpostgres",
                    "priority": 250,
                    "protocol": "Tcp",
                    "source_address_prefix": "*",
                    "source_address_prefixes": [],
                    "source_application_security_group_ids": [],
                    "source_port_range": "*",
                    "source_port_ranges": []
                  }
                ],
                "tags": {
                  "CNDIProject": "${local.cndi_project_name}"
                }
              }
            }
          }
        }
      },
      "cluster_manifests": {
        "cnpg-namespace": {
          "apiVersion": "v1",
          "kind": "Namespace",
          "metadata": {
            "name": "{{ $.cndi.prompts.responses.pgNamespace }}"
          }
        },
        "cnpg-cluster": {
          "apiVersion": "postgresql.cnpg.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "{{ $.cndi.prompts.responses.postgresqlClusterName }}",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}",
            "annotations": {
              "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
            }
          },
          "spec": {
            "imageName": "ghcr.io/cloudnative-pg/postgresql:15.2",
            "instances": 3,
            "storage": {
              "size": "1Gi"
            },
            "replicationSlots": {
              "highAvailability": {
                "enabled": true
              }
            },
            "postgresql": {
              "pg_hba": [
                "host {{ $.cndi.prompts.responses.postgresqlDb }} {{ $.cndi.prompts.responses.postgresqlUser }} all password"
              ]
            },
            "bootstrap": {
              "initdb": {
                "database": "{{ $.cndi.prompts.responses.postgresqlDb }}",
                "owner": "{{ $.cndi.prompts.responses.postgresqlUser }}",
                "secret": {
                  "name": "cnpg-database-user-auth-secret"
                }
              }
            },
            "superuserSecret": {
              "name": "cnpg-cluster-superuser-auth-secret"
            }
          }
        },
        "cnpg-cluster-superuser-auth-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-cluster-superuser-auth-secret",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}"
          },
          "type": "kubernetes.io/basic-auth",
          "stringData": {
            "username": "$.cndi.secrets.seal(POSTGRESQL_CLUSTER_SUPERUSER)",
            "password": "$.cndi.secrets.seal(POSTGRESQL_PASSWORD)"
          }
        },
        "cnpg-database-user-auth-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-database-user-auth-secret",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}"
          },
          "type": "kubernetes.io/basic-auth",
          "stringData": {
            "username": "$.cndi.secrets.seal(POSTGRESQL_USER)",
            "password": "$.cndi.secrets.seal(POSTGRESQL_PASSWORD)"
          }
        },
        "cnpg-connection-string-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-connection-string-secret",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}"
          },
          "type": "Opaque",
          "stringData": {
            "connection": "$.cndi.secrets.seal(POSTGRESQL_CONNECTION_STRING)"
          }
        },
        "cert-manager-cluster-issuer": {
          "apiVersion": "cert-manager.io/v1",
          "kind": "ClusterIssuer",
          "metadata": {
            "name": "lets-encrypt"
          },
          "spec": {
            "acme": {
              "email": "{{ $.cndi.prompts.responses.letsEncryptClusterIssuerEmailAddress }}",
              "server": "https://acme-v02.api.letsencrypt.org/directory",
              "privateKeySecretRef": {
                "name": "lets-encrypt-private-key"
              },
              "solvers": [
                {
                  "http01": {
                    "ingress": {
                      "class": "public"
                    }
                  }
                }
              ]
            }
          }
        },
        "ingress-tcp-services-configmap": {
          "apiVersion": "v1",
          "kind": "ConfigMap",
          "metadata": {
            "name": "nginx-ingress-tcp-microk8s-conf",
            "namespace": "ingress"
          },
          "data": {
            "5432": "{{ $.cndi.prompts.responses.pgNamespace }}/{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw:5432"
          }
        },
        "ingress-daemonset": {
          "apiVersion": "apps/v1",
          "kind": "DaemonSet",
          "metadata": {
            "name": "nginx-ingress-microk8s-controller",
            "namespace": "ingress",
            "labels": {
              "microk8s-application": "nginx-ingress-microk8s"
            }
          },
          "spec": {
            "selector": {
              "matchLabels": {
                "name": "nginx-ingress-microk8s"
              }
            },
            "template": {
              "metadata": {
                "labels": {
                  "name": "nginx-ingress-microk8s"
                }
              },
              "spec": {
                "containers": [
                  {
                    "image": "registry.k8s.io/ingress-nginx/controller:v1.5.1",
                    "name": "nginx-ingress-microk8s",
                    "env": [
                      {
                        "name": "POD_NAME",
                        "valueFrom": {
                          "fieldRef": {
                            "fieldPath": "metadata.name"
                          }
                        }
                      },
                      {
                        "name": "POD_NAMESPACE",
                        "valueFrom": {
                          "fieldRef": {
                            "fieldPath": "metadata.namespace"
                          }
                        }
                      }
                    ],
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 80,
                        "hostPort": 80
                      },
                      {
                        "name": "https",
                        "containerPort": 443,
                        "hostPort": 443
                      },
                      {
                        "name": "postgres",
                        "containerPort": 5432,
                        "hostPort": 5432,
                        "protocol": "TCP"
                      }
                    ],
                    "args": [
                      "/nginx-ingress-controller",
                      "--tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf",
                      "--ingress-class=public"
                    ]
                  }
                ]
              }
            }
          }
        },
        "cnpg-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "cnpg-ingress",
            "namespace": "{{ $.cndi.prompts.responses.pgNamespace }}",
            "annotations": {
              "cert-manager.io/cluster-issuer": "lets-encrypt",
              "kubernetes.io/tls-acme": "true"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.postgresqlDomainName }}"
                ],
                "secretName": "lets-encrypt-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.postgresqlDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw",
                          "port": {
                            "number": 5432
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "argo-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "argocd-server-ingress",
            "namespace": "argocd",
            "annotations": {
              "cert-manager.io/cluster-issuer": "lets-encrypt",
              "kubernetes.io/tls-acme": "true",
              "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
              "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "{{ $.cndi.prompts.responses.argocdDomainName }}"
                ],
                "secretName": "lets-encrypt-private-key"
              }
            ],
            "rules": [
              {
                "host": "{{ $.cndi.prompts.responses.argocdDomainName }}",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "argocd-server",
                          "port": {
                            "name": "https"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "applications": {
        "cnpg": {
          "targetRevision": "0.18.0",
          "destinationNamespace": "cnpg-system",
          "repoURL": "https://cloudnative-pg.github.io/charts",
          "chart": "cloudnative-pg"
        }
      }
    },
    "env": {
      "extend_basic_env": "azure",
      "entries": [
        {
          "type": "Comment",
          "comment": "PostgreSQL connection parameters"
        },
        {
          "name": "POSTGRESQL_DB",
          "value": "{{ $.cndi.prompts.responses.postgresqlDb }}"
        },
        {
          "name": "POSTGRESQL_USER",
          "value": "{{ $.cndi.prompts.responses.postgresqlUser }}"
        },
        {
          "name": "POSTGRESQL_PASSWORD",
          "value": "{{ $.cndi.prompts.responses.postgresqlPassword }}"
        },
        {
          "name": "POSTGRESQL_PROTOCOL",
          "value": "postgresql"
        },
        {
          "name": "POSTGRESQL_HOST",
          "value": "{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw"
        },
        {
          "name": "POSTGRESQL_PORT",
          "value": "5432"
        },
        {
          "name": "POSTGRESQL_CONNECTION_STRING",
          "value": "postgresql://{{ $.cndi.prompts.responses.postgresqlUser }}:{{ $.cndi.prompts.responses.postgresqlPassword }}@{{ $.cndi.prompts.responses.postgresqlClusterName }}-rw:5432/{{ $.cndi.prompts.responses.postgresqlDb }}"
        },
        {
          "name": "POSTGRESQL_CLUSTER_SUPERUSER",
          "value": "postgres"
        }
      ]
    },
    "readme": {
      "extend_basic_readme": "azure",
      "template_section": "## cloudnative-pg\n\nThis template deploys a Standalone production ready [cloudnative-posgresql-database](https://github.com/cloudnative-pg/charts)"
    }
  }
}
