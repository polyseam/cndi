prompts:
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-prompts.yaml):
      {}
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/setup-prompts.yaml):
      {}

  - name: deploy_argocd_ingress
    default: true
    message: >-
      Do you want to install ArgoCD and expose it via an ingress?
    type: Confirm

  - name: argocd_hostname
    default: argocd.example.com
    message: >-
      What hostname should ArgoCD be accessible at?
    type: Input
    validators:
      - hostname # FQDN
    condition:
      - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
      - ==
      - true

  - name: neo4j_password
    default: letmeinplease
    message: >-
      What will be your default password for your 'neo4j' user?
    type: Secret

  - name: deploy_neo4j_ingress
    default: true
    message: >-
      Do you want to expose Neo4j to the web?
    type: Confirm

  - name: neo4j_hostname
    default: neo4j.example.com
    message: >-
      What hostname should Neo4j be accessible at?
    type: Input
    validators:
      - hostname # FQDN
      - min_length: 3
    condition:
      - "{{ $cndi.get_prompt_response(deploy_neo4j_ingress) }}"
      - ==
      - true

outputs:
  cndi_config:
    project_name: "{{ $cndi.get_prompt_response(project_name) }}"
    cndi_version: v2
    provider: "{{ $cndi.get_prompt_response(deployment_target_provider) }}"
    distribution: "{{ $cndi.get_prompt_response(deployment_target_distribution) }}"
    # this is a template comment
    infrastructure:
      cndi:
        cert_manager:
          email: "{{ $cndi.get_prompt_response(cert_manager_email) }}"
        nodes:
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/neo4j/nodes/{{ $cndi.get_prompt_response(deployment_target_provider) }}.yaml):
            {}

    cluster_manifests:
      $cndi.comment(neo4j-auth-secret): Neo4j Credentials
      neo4j-auth-secret:
        apiVersion: v1
        kind: Secret
        metadata:
          name: neo4j-auth-secret
          namespace: neo4j
        type: Opaque
        stringData:
          NEO4J_AUTH: $cndi_on_ow.seal_secret_from_env_var(NEO4J_PASSWORD)

      argo-ingress:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/default-ingress.yaml):
          args:
            ingress_name: argocd-ingress
            hostname: "{{ $cndi.get_prompt_response(argocd_hostname) }}"
            service_name: argocd-server
            service_port: 443
            namespace: argocd

          condition:
            - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
            - ==
            - true

      neo4j-ingress:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/default-ingress.yaml):
          args:
            ingress_name: neo4j-ingress
            hostname: "{{ $cndi.get_prompt_response(neo4j_hostname) }}"
            service_name: neo4j
            service_port: 7473
            namespace: neo4j

          condition:
            - "{{ $cndi.get_prompt_response(deploy_neo4j_ingress) }}"
            - ==
            - true

    applications:
      neo4j:
        targetRevision: 5.9.0
        destinationNamespace: neo4j
        repoURL: "https://helm.neo4j.com/neo4j"
        chart: neo4j
        values:
          disableLookups: true
          neo4j:
            name: neo4j
            passwordFromSecret: neo4j-auth-secret
            acceptLicenseAgreement: "yes"
          volumes:
            data:
              mode: defaultStorageClass
          services:
            neo4j:
              enabled: false
          ssl:
            bolt:
              privateKey:
                secretName: cluster-issuer-private-key
                subPath: tls.key
              publicCertificate:
                secretName: cluster-issuer-private-key
                subPath: tls.crt
            https:
              privateKey:
                secretName: cluster-issuer-private-key
                subPath: tls.key
              publicCertificate:
                secretName: cluster-issuer-private-key
                subPath: tls.crt
            cluster:
              privateKey:
                secretName: cluster-issuer-private-key
                subPath: tls.key
              publicCertificate:
                secretName: cluster-issuer-private-key
                subPath: tls.crt

  env:
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/git-credentials-{{ $cndi.get_prompt_response(git_credentials_mode) }}-env.yaml):
      {}

    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/env.yaml):
      {}

    $cndi.comment(neo4j-heading): Neo4j Credentials
    NEO4J_USERNAME: neo4j
    $cndi.comment(neo4j-password-comment): "'neo4j/' prefix is required for the password"
    NEO4J_PASSWORD: "neo4j/{{ $cndi.get_prompt_response(neo4j_password) }}"

  readme:
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/readme-section.md):
      {}
