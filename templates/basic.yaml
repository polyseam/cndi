blocks:
  - name: external_net_config
    content:
      mode: external
      subnet_identifier: "{{ $cndi.get_prompt_response(external_subnet_id) }}"
prompts:
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-prompts.yaml):
      {}
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/setup-prompts.yaml):
      {}

  - name: deploy_argocd_ingress
    default: true
    message: >-
      Do you want to expose ArgoCD with an Ingress?
    type: Confirm

  - name: argocd_hostname
    default: argocd.example.com
    message: >-
      What hostname should ArgoCD be accessible at?
    type: Input
    validators:
      - hostname
    condition:
      - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
      - ==
      - true
      
  - name: use_external_network
    message: >-
      Would you like to use an existing Virtual Network?
    type: Confirm
    default: false

  - name: use_existing_subnets
    message: >-
      Would you like to use existing subnets from that Virtual Network?
    type: Confirm
    default: false
    condition:
      - "{{ $cndi.get_prompt_response(use_external_network) }}"
      - ==
      - true
    
  - name: subnets
    message: >-
      Please list your subnet names:
    type: List
    default: false
    condition:
      - "{{ $cndi.get_prompt_response(use_external_network) }}"
      - ==
      - true
    
  

  - name: external_subnet_id
    message: >-
      Please provide a Subnet ID for CNDI to use:
    type: Input
    condition:
      - "{{ $cndi.get_prompt_response(use_external_network) }}"
      - ==
      - true
outputs:
  cndi_config:
    # source_control_platform: github ?
    cndi_version: v2
    project_name: "{{ $cndi.get_prompt_response(project_name) }}"
    provider: "{{ $cndi.get_prompt_response(deployment_target_provider) }}"
    distribution: "{{ $cndi.get_prompt_response(deployment_target_distribution) }}"
    # this is a Template comment
    infrastructure:
      cndi:
        network:
          $cndi.get_block(external_net_config):
            condition:
              - "{{ $cndi.get_prompt_response(use_external_network) }}"
              - ==
              - true

        cert_manager:
          email: "{{ $cndi.get_prompt_response(cert_manager_email) }}"

        external_dns:
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/external-dns/config.yaml):
            condition:
              - "{{ $cndi.get_prompt_response(enable_external_dns) }}"
              - ==
              - true
            args:
              dns_provider: "{{ $cndi.get_prompt_response(dns_provider) }}"

        nodes:
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/{{ $cndi.get_prompt_response(deployment_target_distribution) }}/standard-nodes.yaml):
            {}

    cluster_manifests:
      argo-ingress:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/default-ingress.yaml):
          args:
            ingress_name: argocd-ingress
            ingress_class_name: public
            hostname: "{{ $cndi.get_prompt_response(argocd_hostname) }}"
            service_name: argocd-server
            service_port: 443
            namespace: argocd
          condition:
            - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
            - ==
            - true

      external-dns-secret:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/external-dns/secret/{{ $cndi.get_prompt_response(dns_provider) }}.yaml):
          condition:
            - "{{ $cndi.get_prompt_response(enable_external_dns) }}"
            - ==
            - true

  env:
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/git-credentials-{{ $cndi.get_prompt_response(git_credentials_mode) }}-env.yaml):
      {}

    $cndi.get_block(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/env.yaml):
      {}

  readme:
    project_name: "# {{ $cndi.get_prompt_response(project_name) }}"
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/common/core-readme.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/common-blocks/main/{{ $cndi.get_prompt_response(deployment_target_provider) }}/{{ $cndi.get_prompt_response(deployment_target_distribution) }}/readme-section.md):
      {}
    basic: |
      # Basic Deployment Guide

      This Template provides the essential building blocks of a CNDI Cluster,
      and can be extended to meet any need. If there is no existing 
      CNDI Template for your use-case, we recommend deploying this `basic`
      Template as is. 
      
      After you verify the Template is deployed successfully to your 
      infrastructure, it can be enhanced using the `cndi_config.yaml` fields 
      `applications` and `cluster_manifests` with Kubernetes manifests 
      and Helm charts respectively.
