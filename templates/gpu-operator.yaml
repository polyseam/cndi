blocks:
  - name: aws-nodes
    content:
      nodes:
        - name: gpu-enabled
          $cndi.comment(aws_vantage): https://instances.vantage.sh/aws/ec2/g6.xlarge?region=us-east-1
          instance_type: g6.xlarge
          labels:
            cuda_capability: '8.9'
            gpu: true

  - name: azure-nodes
    content:
      nodes:
        - name: gpuenabled
          $cndi.comment(azure_vantage): https://instances.vantage.sh/azure/vm/nc4ast4-v3
          instance_type: nc4ast4-v3
          labels:
            cuda_capability: '7.5'
            gpu: true

  - name: gcp-nodes
    content:
      nodes:
        - name: gpu-enabled
          $cndi.comment(gcp_warning): This is not yet functional!
          $cndi.comment(gcp_contd): The GPUs are addons in GCP, not node types
          instance_type: g2-standard-3
          labels:
            cuda_capability: '8.9'
            gpu: true


prompts:
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/core-prompts.yaml):
      {}
  - $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/core-prompts.yaml):
      {}

  - name: deploy_argocd_ingress
    default: true
    message: >-
      Do you want to expose ArgoCD with an Ingress?
    type: Confirm

  - name: argocd_hostname
    default: argocd.example.com
    message: >-
      What hostname should ArgoCD be accessible at?
    type: Input
    validators:
      - hostname
    condition:
      - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
      - ==
      - true

outputs:
  cndi_config:
    # source_control_platform: github ?
    cndi_version: v2
    project_name: "{{ $cndi.get_prompt_response(project_name) }}"
    provider: "{{ $cndi.get_prompt_response(deployment_target_provider) }}"
    distribution: "{{ $cndi.get_prompt_response(deployment_target_distribution) }}"
    # this is a Template comment
    infrastructure:
      cndi:
        cert_manager:
          email: "{{ $cndi.get_prompt_response(cert_manager_email) }}"

        external_dns: 
          $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/external-dns/config/{{ $cndi.get_prompt_response(dns_provider) }}.yaml):
            condition:
              - "{{ $cndi.get_prompt_response(enable_external_dns) }}"
              - ==
              - true

        $cndi.get_block({{ $cndi.get_prompt_response(deployment_target_provider) }}-nodes):
          {}

    cluster_manifests:
      argo-ingress:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/default-ingress.yaml):
          args:
            ingress_name: argocd-ingress
            ingress_class_name: public
            hostname: "{{ $cndi.get_prompt_response(argocd_hostname) }}"
            service_name: argocd-server
            service_port: 443
            namespace: argocd
          condition:
            - "{{ $cndi.get_prompt_response(deploy_argocd_ingress) }}"
            - ==
            - true

      external-dns-secret:
        $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/external-dns/secret/{{ $cndi.get_prompt_response(dns_provider) }}.yaml):
          condition:
            - "{{ $cndi.get_prompt_response(enable_external_dns) }}"
            - ==
            - true

    applications:
      gpu-operator:
        repoURL: https://helm.ngc.nvidia.com/nvidia
        chart: gpu-operator
        targetRevision: v24.3.0
        destinationNamespace: gpu-operator
        values: {} # https://github.com/NVIDIA/gpu-operator/blob/master/deployments/gpu-operator/values.yaml
        
  env:
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/git-credentials-{{ $cndi.get_prompt_response(git_credentials_mode) }}-env.yaml):
      {}
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/env.yaml):
      {}
    $cndi.get_block(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/env.yaml):
      {}

  readme:
    project_name: "# {{ $cndi.get_prompt_response(project_name) }}"
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/common/cluster/core-readme.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/core.md):
      {}
    $cndi.get_string(https://raw.githubusercontent.com/polyseam/cndi/main/blocks/{{ $cndi.get_prompt_response(deployment_target_provider) }}/{{ $cndi.get_prompt_response(deployment_target_distribution) }}.md):
      {}

    basic: |
      ## gpu-operator

      * [GPU on K8s Webinar](https://info.nvidia.com/how-to-use-gpus-on-kubernetes-webinar.html)
      * [gpu-operator Blog Post](https://developer.nvidia.com/blog/nvidia-gpu-operator-simplifying-gpu-management-in-kubernetes/)
      * [Example values.yaml](https://github.com/NVIDIA/gpu-operator/blob/master/deployments/gpu-operator/values.yaml)